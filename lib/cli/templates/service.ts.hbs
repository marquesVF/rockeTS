import { Service{{#if services}}, Inject{{/if}}{{#if repository}}, InjectRepository{{/if}} } from 'tsrocket'
{{#each services}}
import {{this.name}}Service from './{{this.variable}}'
{{/each}}
{{#if repository}}
import {{repository.model}}Repository from '../repositories/{{repository.variable}}'
import {{repository.model}} from '../models/{{repository.variable}}'
import { {{repository.model}}Dto } from '../dtos/{{repository.variable}}'
{{/if}}

@Service()
export default class {{ name }}Service {

    {{#each services}}
    @Inject({{this.name}}Service)
    private readonly {{this.variable}}Service: {{this.name}}Service

    {{/each}}
    {{#if repository}}
    @InjectRepository({{repository.model}}Repository)
    private readonly repository: {{repository.model}}Repository

    async all() {
        return this.repository.find()
    }

    async find(id: string) {
        return this.repository.findOneOrFail(id)
    }

    async create({{repository.variable}}: {{repository.model}}Dto) {
        return this.repository.save({{repository.variable}})
    }

    async update(id: string, {{repository.variable}}: Partial<{{repository.model}}>) {
        return this.repository.update(id, {{repository.variable}})
    }

    async delete(id: string) {
        return this.repository.delete(id)
    }
    {{/if}}
}
